1. Java datatypes

class Solution{
    public static void main(String []argh)
    {



        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++)
        {

            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=-128 && x<=127)System.out.println("* byte");
                 if(x>=-32768 && x<=32767)System.out.println("* short");
                  if(x>=-2147483648 && x<=2147483647)System.out.println("* int");
                   if(x>=-9223372036854775808L && x<=9223372036854775807L)                                      System.out.println("* long");
               
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }


2. Java Static Initializer Block

public static int B=0;
public static int H=0;
public static boolean flag=false;

static{
Scanner sc=new Scanner(System.in);
B=sc.nextInt();
H=sc.nextInt();
  if(B>0&&H>0)
  {
    flag=true;
  }
  else { System.out.println("java.lang.Exception: Breadth and height must be positive");}
}

public static void main(String[] args){
		if(flag){
			int area=B*H;
			System.out.print(area);
		}


3. Java int to string

import java.util.*;
import java.security.*;
public class Solution {
 public static void main(String[] args) {

  DoNotTerminate.forbidExit();

  try {
   Scanner in = new Scanner(System.in);
   int n = in .nextInt();
   in.close();
   //String s=???; Complete this line below
String s=Integer.toString(n);
   
   if (n == Integer.parseInt(s)) {
    System.out.println("Good job");
   } else {
    System.out.println("Wrong answer.");
   }
  } catch (DoNotTerminate.ExitTrappedException e) {
   System.out.println("Unsuccessful Termination!!");
  }
 }
}

class DoNotTerminate {

 public static class ExitTrappedException extends SecurityException {

  private static final long serialVersionUID = 1;
 }

 public static void forbidExit() {
  final SecurityManager securityManager = new SecurityManager() {
   @Override
   public void checkPermission(Permission permission) {
    if (permission.getName().contains("exitVM")) {
     throw new ExitTrappedException();
    }
   }
  };
  System.setSecurityManager(securityManager);
 }
}

		